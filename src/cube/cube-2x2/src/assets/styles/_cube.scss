@charset "UTF-8";
*,
*:before,
*:after {
    box-sizing: border-box;
}

// TODO refactor
.scene,
.rubik,
.c-cube,
.cube-display,
.face {
    transform-style: preserve-3d;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-origin: 50% 50%;
}

html {
    font-size: 16px;
}

body {
    margin: 0;
    transition: 200ms;
    width: 100vw;
    height: 100vh;
    cursor: pointer;
    perspective: 1000px;
    background: white;
    &.toggle {
        .scene {
            // animation-play-state: paused;
            transform-origin: 50% 50%;
            animation: rotate 2s linear infinite;
        }
    }
    &.rotate{
        .scene{
            transform: rotateY(180deg);
        }
    }
}

.scene {
    left: calc(50% - #{$cube-size});
    top: calc(50% - #{$cube-size});
    width: 2 * $cube-size;
    height: 2 * $cube-size;
    //transform: translateZ($cube-size*1);
    transition: 200ms;
}

.rubik {
    transform: translateZ($cube-size) rotateX(-30deg) rotateY(-30deg) rotateZ(0deg);
}

@keyframes rotate {
    from {
        transform: rotate3d(0, 0, 0, 0turn);
    }
    to {
        transform: rotate3d(1, 1, 1, 1turn);
    }
}

@keyframes rotateY {
    from {
        transform: rotate3d(0, 0, 0, 0turn);
    }
    to {
        transform: rotate3d(0, 1, 0, 1turn);
    }
}